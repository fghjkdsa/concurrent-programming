"""线程中函数的调用和返回"""
import threading
import time
from multiprocessing import Queue
# 或者用 from queue import Queue

def fun1(thread_name,delay,q):
    print('线程{0}开始运行fun1'.format(thread_name))
    time.sleep(delay)
    print('线程{0}运行fun1结束'.format(thread_name))
    q.put([delay/2,thread_name,delay]) # 函数返回值放在队列中，标明该返回值属于哪个函数（任务、参数）

def fun2(thread_name,delay,q):
    print('线程{0}开始运行fun2'.format(thread_name))
    time.sleep(delay)
    print('线程{0}运行fun2结束'.format(thread_name))
    q.put([delay / 2, thread_name, delay]) # 函数返回值放在队列中，标明该返回值属于哪个函数（任务、参数）

if __name__=='__main__':
    print('主线程开始运行')
    start = time.time()
    # 创建队列，用于保存函数返回值
    q = Queue()

    #创建线程
    t1=threading.Thread(target=fun1,args=('thread-1',4,q))
    t2=threading.Thread(target=fun2,args=('thread-2',2,q))
    t1.start()
    t2.start()
    t1.join()
    t2.join()
    end = time.time()

    results = [q.get() for i in range(2)] # 注意 元素顺序是按照队列先进先出
    print(results)
    print('用时：',end-start)
    print('主线程运行结束')
